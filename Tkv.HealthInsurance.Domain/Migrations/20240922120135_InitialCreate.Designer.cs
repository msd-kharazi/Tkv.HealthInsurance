// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tkv.HealthInsurance.Domain;

#nullable disable

namespace Tkv.HealthInsurance.Domain.Migrations
{
    [DbContext(typeof(HealthInsuranceDbContext))]
    [Migration("20240922120135_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tkv.HealthInsurance.Domain.Domains.Definition.Coverage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternationalCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("MaximumDeposit")
                        .HasColumnType("bigint");

                    b.Property<long>("MinimumDeposit")
                        .HasColumnType("bigint");

                    b.Property<double>("PriceMultiplier")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Coverage");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            InsertedDateTime = new DateTime(2024, 9, 22, 15, 31, 34, 576, DateTimeKind.Local).AddTicks(5),
                            InternationalCode = 100,
                            LastModifiedDateTime = new DateTime(2024, 9, 22, 15, 31, 34, 576, DateTimeKind.Local).AddTicks(5),
                            MaximumDeposit = 500000000L,
                            MinimumDeposit = 5000L,
                            PriceMultiplier = 0.0051999999999999998,
                            Title = "Surgery"
                        },
                        new
                        {
                            Id = 2L,
                            InsertedDateTime = new DateTime(2024, 9, 22, 15, 31, 34, 576, DateTimeKind.Local).AddTicks(5),
                            InternationalCode = 200,
                            LastModifiedDateTime = new DateTime(2024, 9, 22, 15, 31, 34, 576, DateTimeKind.Local).AddTicks(5),
                            MaximumDeposit = 400000000L,
                            MinimumDeposit = 4000L,
                            PriceMultiplier = 0.0041999999999999997,
                            Title = "Dentistry"
                        },
                        new
                        {
                            Id = 3L,
                            InsertedDateTime = new DateTime(2024, 9, 22, 15, 31, 34, 576, DateTimeKind.Local).AddTicks(5),
                            InternationalCode = 300,
                            LastModifiedDateTime = new DateTime(2024, 9, 22, 15, 31, 34, 576, DateTimeKind.Local).AddTicks(5),
                            MaximumDeposit = 200000000L,
                            MinimumDeposit = 2000L,
                            PriceMultiplier = 0.0050000000000000001,
                            Title = "Hospitalization"
                        });
                });

            modelBuilder.Entity("Tkv.HealthInsurance.Domain.Domains.RequestLog.RequestLogDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("CalculatedValue")
                        .HasColumnType("float");

                    b.Property<long>("CoverageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("DepositAmount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("RequestLogMasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CoverageId");

                    b.HasIndex("RequestLogMasterId");

                    b.ToTable("RequestLogDetail");
                });

            modelBuilder.Entity("Tkv.HealthInsurance.Domain.Domains.RequestLog.RequestLogMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DeletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RequestLogMaster");
                });

            modelBuilder.Entity("Tkv.HealthInsurance.Domain.Domains.RequestLog.RequestLogDetail", b =>
                {
                    b.HasOne("Tkv.HealthInsurance.Domain.Domains.Definition.Coverage", "Coverage")
                        .WithMany("RequestLogDetails")
                        .HasForeignKey("CoverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tkv.HealthInsurance.Domain.Domains.RequestLog.RequestLogMaster", "RequestLogMaster")
                        .WithMany("RequestLogDetails")
                        .HasForeignKey("RequestLogMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coverage");

                    b.Navigation("RequestLogMaster");
                });

            modelBuilder.Entity("Tkv.HealthInsurance.Domain.Domains.Definition.Coverage", b =>
                {
                    b.Navigation("RequestLogDetails");
                });

            modelBuilder.Entity("Tkv.HealthInsurance.Domain.Domains.RequestLog.RequestLogMaster", b =>
                {
                    b.Navigation("RequestLogDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
